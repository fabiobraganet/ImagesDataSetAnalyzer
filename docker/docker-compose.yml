version: '3.8'

services:
  postgres:
    image: postgres:16
    container_name: ServerDB
    environment:
      POSTGRES_DB: KeyCloakDB
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - '30000:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data

  keycloak:
    image: quay.io/keycloak/keycloak:25.0.1
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      DB_VENDOR: postgres
      DB_ADDR: ServerDB
      DB_DATABASE: KeyCloakDB
      DB_USER: admin
      DB_PASSWORD: admin
    ports:
      - '50000:8080'
    depends_on:
      - postgres
    command: ['start-dev']

  keycloak-config:
    image: appropriate/curl
    container_name: keycloak-config
    depends_on:
      - keycloak
    volumes:
      - ./Keycloack/create_realm.sh:/docker/create_realm.sh
      - ./Keycloack/realm-export.json:/docker/realm-export.json
    entrypoint: >
      /bin/sh -c "
      apk add --no-cache jq &&
      until curl -s -o /dev/null -w '%{http_code}' http://keycloak:8080/auth/realms/master/protocol/openid-connect/token | grep -q 200; do
        echo 'Waiting for Keycloak...';
        sleep 5;
      done &&
      chmod +x /docker/create_realm.sh &&
      /docker/create_realm.sh /docker/realm-export.json;
      "

  imagesdatasetanalyzer:
    build:
      context: ..
    container_name: imagesdatasetanalyzer
    ports:
      - '3001:3001'
    environment:
      - REACT_APP_KEYCLOAK_URL=http://keycloak:50000/auth
      - REACT_APP_KEYCLOAK_REALM=mynewrealm
      - REACT_APP_KEYCLOAK_CLIENT_ID=mynewclient
    depends_on:
      - keycloak
      - keycloak-config

volumes:
  postgres_data:
